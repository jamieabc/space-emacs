* Postgresql
** Create user

   #+BEGIN_SRC shell
   createuser user_name --pwprompt
   #+END_SRC

   #+BEGIN_SRC sql
   create user user_name;
   \du
   #+END_SRC

** Grant permission

   #+BEGIN_SRC sql
   alter user user_name with superuser;
   #+END_SRC

** Set password

   #+BEGIN_SRC sql
   \password user_name;
   #+END_SRC

** Create database

   [[http://www.postgresqltutorial.com/postgresql-create-database/][reference]]

   #+BEGIN_SRC sql
   create database db_name owner=user_name;
   #+END_SRC

   #+BEGIN_SRC shell
   createdb -O user_name db_name
   #+END_SRC

** Drop database

   #+BEGIN_SRC sql
   drop database dbname;
   #+END_SRC

** Drop user

   #+BEGIN_SRC sql
   drop user user_name;
   #+END_SRC

** Show table

   #+BEGIN_SRC sql
   \dt
   #+END_SRC

** Show databases

   #+BEGIN_SRC sql
   \l
   #+END_SRC
* Product

  Do things don't scale. When haiching ask using facebook to acquire
  user, sean says don't use Facebook. He asked questions about
  do you know how to run app with millions of users? If yes, do what
  it should; if not, do things that don't scale.

  Only face to face user interview will make us know user feedback. If
  someone (e.g. consultant) never use this app, then should not count
  for his advise. It may takes 100 interviews to get 1 really great
  feedback, but that's how it should.

  Sean also mension about an example, when you go to a restaurant and
  says that some dish is not good. When chef goes out and asks how to
  improve, I might not know how to improve it, I just know it's not
  good. So it will take a lot of time/effort to get that great
  feedback, that feedback will get us more uses, but we just don't
  know how/when it will come out.
* Updaterd
** Fork

   Need to set block_hash to
   "0000000000000000000000000000000000000000000000000000000000000000"
   for first top N block records.

   Also, need to delete one record from block table. Because from
   code, the condtion to check if it enters fork at `connector.go: #294`

   #+BEGIN_SRC go
     if conn.highestBlockNumber > height {
         if conn.highestBlockNumber-height >= 2 {
             conn.state = cStateForkDetect
         } else {
             conn.samples += 1
             if conn.samples > samplelingLimit {
                 conn.state = cStateForkDetect
             }
         }
     }
   #+END_SRC

   #+BEGIN_SRC sql
   update block set block_hash = '0000000000000000000000000000000000000000000000000000000000000000' where block_number + 100 > (select block_number from block order by block_number desc limit 1);

   delete from block where block_number = (select block_number from block order by block_number desc limit 1);
   #+END_SRC
* Go
** Ubuntu installation

   #+BEGIN_SRC shell
   wget -q https://storage.googleapis.com/golang/getgo/installer_linux
   chmod +x installer_linux
   ./installer_linux
   source /root/.bash_profile
   mkdir ~/go
   #+END_SRC

** List supported os/architecture

   #+BEGIN_SRC shell
   go tool dist list -json
   #+END_SRC
