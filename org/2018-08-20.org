* Appium
** Install desktop gui

   [[https://github.com/appium/appium-desktop/releases][Mac Desktop url]]

   Start server first, then create new session with following settings

   {
     "platformName": "iOS",
     "bundleId": "com.bitmark.registry.inhouse.e2e",
     "deviceName": "ip 6",
     "automationName": "XCUITest",
     "udid": "0508B5E3-8BC5-469A-9B72-C76EE390D0D1"
   }

   In `Advanced Settings`, click `Allow Unauthorized Certificates`

** Install web driver agent (not sure if necessary)

   When install appium desktop, it also install the WebDriverAgent

*** Install xcuitest driver

    #+BEGIN_SRC shell
    cd /Applications/Appium.app/Contents/Resources/app/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/
    mkdir -p Resources/WebDriverAgent.bundle
    sh ./Scripts/bootstrap.sh
    #+END_SRC

*** Modify web driver agent

    1. Open `WebDriverAgent.xcodeproj`
    2. Select `WebDriverAgent` in project navigation
    3. For Target `WebDriverAgentLib`, select `Automatically manage signing`
    4. For Target `WebDriverAgentRunner`, select `Automatically manage signing`

** Get simulator udid

   #+BEGIN_SRC shell
   instruments -s devices
   #+END_SRC

** Error

   - Original error: Could not create simulator with name
     'appiumTest-ip 6', device type id 'ip 6' and runtime id
     '11.4'. Reason: 'simctl error running 'create': Invalid device
     typE: ip 6'

     use `XCUITest`

** Get session info

   http://localhost:4723/wd/hub/sessions
** [[https://github.com/PerfectoCode/Community-Samples/blob/master/Appium/Ruby/appium_ios_test.rb][Sample code]]
** Ruby Console

   #+BEGIN_SRC shell
   gem install --no-rdoc --no-ri appium_console
   #+END_SRC

*** Commands

    [[https://dzone.com/refcardz/getting-started-with-appium?chapter=4][reference]]

**** page_class

**** page :XCUIElementTypeOther

**** find('CREATE NEW ACCOUNT')

**** find('xxx').click

**** find('xxx').clear

**** find('xxx').send_keys('test text')

**** element.displayed?

     is it visible to the user

**** element.enabled?

     can it be selected by the user

**** element.text

**** element.attributes

** JS

   [[https://github.com/appium-boneyard/sample-code/blob/master/sample-code/examples/node/ios-actions.js][reference]]

* Go
** go-callvis

   for `bitmarkd`, enter directory and run command

   #+BEGIN_SRC shell
   go-callvis -group pkg ./command/bitmarkd/
   #+END_SRC

   to specific package

   #+BEGIN_SRC shell
   go-callvis -focus blockdigest -group pkg ./command/recorderd
   #+END_SRC

   to png file, seems not working...still open server

   #+BEGIN_SRC shell
   go-callvis -focus blockdigest -group pkg ./command/recorderd | dot -Tpng -o blockdigest.png
   #+END_SRC

   copy svg from tmp directory and convert to png

   #+BEGIN_SRC shell
   convert -background none blockrecord.svg blockrecord.png
   #+END_SRC
